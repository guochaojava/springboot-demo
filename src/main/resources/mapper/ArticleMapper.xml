<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.ArticleMapper">
    <resultMap id="BaseResultMap" type="com.example.demo.model.Article">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="cover" property="cover" jdbcType="VARCHAR"/>
        <result column="intro" property="intro" jdbcType="VARCHAR"/>
        <result column="img" property="img" jdbcType="VARCHAR"/>
        <result column="source" property="source" jdbcType="VARCHAR"/>
        <result column="sort" property="sort" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="BIGINT"/>
        <result column="status" property="status" jdbcType="BIT"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.example.demo.model.Article" extends="BaseResultMap">
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, title, cover, intro, img, source, sort, create_time, status
  </sql>
    <sql id="Blob_Column_List">
    content
  </sql>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from article
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from article
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.example.demo.model.Article">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into article (title, cover, intro,
        img, source, sort,
        create_time, status, content
        )
        values (#{title,jdbcType=VARCHAR}, #{cover,jdbcType=VARCHAR}, #{intro,jdbcType=VARCHAR},
        #{img,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER},
        #{createTime,jdbcType=BIGINT}, #{status,jdbcType=BIT}, #{content,jdbcType=LONGVARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.example.demo.model.Article">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into article
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="title != null">
                title,
            </if>
            <if test="cover != null">
                cover,
            </if>
            <if test="intro != null">
                intro,
            </if>
            <if test="img != null">
                img,
            </if>
            <if test="source != null">
                source,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="cover != null">
                #{cover,jdbcType=VARCHAR},
            </if>
            <if test="intro != null">
                #{intro,jdbcType=VARCHAR},
            </if>
            <if test="img != null">
                #{img,jdbcType=VARCHAR},
            </if>
            <if test="source != null">
                #{source,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=BIT},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Article">
        update article
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="cover != null">
                cover = #{cover,jdbcType=VARCHAR},
            </if>
            <if test="intro != null">
                intro = #{intro,jdbcType=VARCHAR},
            </if>
            <if test="img != null">
                img = #{img,jdbcType=VARCHAR},
            </if>
            <if test="source != null">
                source = #{source,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=BIT},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.demo.model.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      intro = #{intro,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT},
      status = #{status,jdbcType=BIT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      intro = #{intro,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT},
      status = #{status,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="list" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from article
    </select>

    <select id="apiList" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from article
        <where>
            <if test="title != null ">
                and title like CONCAT('%',#{title},'%')
            </if>
        </where>
    </select>
</mapper>